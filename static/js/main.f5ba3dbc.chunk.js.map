{"version":3,"sources":["components/AccountMenu/AccountMenu.js","components/Header/Header.js","components/SideNav/SideNav.js","components/Layout/Layout.js","components/InventoryItem/InventoryItem.js","components/InventoryList/InventoryList.js","components/RecipeBox/RecipeBox.js","components/RecipesList/RecipesList.js","components/BasketItem/BasketItem.js","components/Basket/Basket.js","components/AddIngredient/AddIngredient.js","components/AddRecipe/AddRecipe.js","pages/LoginPage/LoginPage.js","pages/RegistrationPage/RegistrationPage.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["AccountMenu","showAccountMenu","setShowAccountMenu","restaurant","useSelector","state","useState","loading","setLoading","menuHeight","setMenuHeight","uploadAvatarRef","useRef","accountMenuRef","history","useHistory","dispatch","useDispatch","useEffect","current","clientHeight","type","name","id","style","display","accept","ref","onChange","e","file","reader","FileReader","readAsDataURL","onloadend","data","currentTarget","result","axios","post","username","then","res","put","_id","avatarUrl","payload","localStorage","setItem","JSON","stringify","catch","err","console","error","avatarInputChangeHandler","target","files","className","onClick","src","alt","color","width","onMouseUp","click","xmlns","viewBox","d","restaurantName","branch","push","clear","Header","location","useLocation","getItem","pathname","SideNav","Layout","props","classList","toggle","parentElement","querySelector","children","InventoryItem","ingredient","weightUnits","volumeUnits","ingredients","expand","setExpand","updateType","setUpdateType","displayUnit","unit","setUnit","bottomDivContentHeight","setBottomDivContentHeight","bottomButtonText","setBottomButtonText","updateQuantity","setUpdateQuantity","updateUnit","setUpdateUnit","updateTotalCost","setUpdateTotalCost","updateInventoryRef","inventoryDetailsRef","updateInventoryButtonClickHandler","a","bottomButtonClickHandler","Number","editButtonClickHandler","window","confirm","toUpperCase","delete","map","ingredientIds","filter","restaurantData","recipes","alert","quantity","some","weight","find","conversion","toFixed","volume","density","value","hidden","label","height","visibility","category","totalCost","remarks","htmlFor","backgroundColor","disabled","convertedQuantity","newQuantity","totalCostReduction","newTotalCost","InventoryList","ingredientsSelector","setIngredients","displayIngredients","setDisplayIngredients","searchInput","trim","toLowerCase","filteredIngredients","indexOf","searchBarChangeHandler","focusable","RecipeBox","recipe","notEnough","notInBasket","basketCounter","recipeIngredients","exists","ingredientRedux","undefined","data-toggle","data-placement","title","to","editBtn","recipeIds","subtractToBasket","addToBasket","RecipesList","basket","recipesSelector","setRecipes","displayRecipes","setDisplayRecipes","filterRecipeDisplay","setFilterRecipeDisplay","displayFilteredRecipes","setDisplayFilteredRecipes","hideAllRecipes","forEach","recipeIngredient","ingredientToCompare","hideSomeRecipes","item","filteredRecipes","defaultChecked","itemQuantity","BasketItem","itemCost","setItemCost","basketBottomDivContentHeight","setBasketBottomDivContentHeight","basketBottomDivContentRef","newCost","deleteFromBasket","details","Basket","ingredientsForReduction","reducedIngredients","ingredientFR","remainingQuantity","remainingTotalCost","index","length","log","itemIngredient","connect","ingredientToEdit","ingredientIsEdit","setName","setDensity","setRemarks","setQuantity","setCategory","setLocation","errorMsg","setErrorMsg","setTotalCost","ingredientId","setIngredientId","setDisplayUnit","ingredientCategories","Set","ingredientLocations","document","step","list","cols","rows","recipeToEdit","recipeIsEdit","setDetails","recipeId","setRecipeId","setRecipeIngredients","addedIngredient","setAddedIngredient","ingredientQuantity","setIngredientQuantity","ingredientDisplayUnit","setIngredientDisplayUnit","ingredientErrorMsg","setIngredientErrorMsg","recipeCategories","ingredientsWithPiece","ingredientIndex","querySelectorAll","findIndex","i","newRecipeIngredients","oldRecipes","parse","LoginPage","setUsername","password","setPassword","loginError","setLoginError","showPassword","setShowPassword","usernameRef","passwordRef","loginHandler","focus","placeholder","onKeyDown","key","RegistrationPage","editAccount","setBranch","setRestaurantName","registrationError","setRegistrationError","registerBody","registerButtonClickHandler","App","path","component","exact","AddIngredient","AddRecipe","initState","imageUrl","reducer","newIngredientsArray","newRecipesArray","newBasket","newBasketItem","newIngredients","action","ingredientToReduce","ingredientName","newIngredient","basketItem","store","createStore","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.f5ba3dbc.chunk.js","sourcesContent":["import \"./AccountMenu.css\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n\r\nconst AccountMenu = ({ showAccountMenu, setShowAccountMenu }) => {\r\n  const restaurant = useSelector((state) => state.restaurant);\r\n  const [loading, setLoading] = useState(false);\r\n  const [menuHeight, setMenuHeight] = useState(0);\r\n  const uploadAvatarRef = useRef(null);\r\n  const accountMenuRef = useRef(null);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const restaurantImageButtonClickButton = () => {\r\n    if (!showAccountMenu) {\r\n      setShowAccountMenu(true);\r\n    } else {\r\n      setShowAccountMenu(false);\r\n    }\r\n  };\r\n\r\n  const uploadAvatarClickHandler = () => {\r\n    uploadAvatarRef.current.click();\r\n  };\r\n\r\n  const avatarInputChangeHandler = (file) => {\r\n    setLoading(true);\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = (e) => {\r\n      let data = e.currentTarget.result;\r\n      axios\r\n        .post(\"https://prigider-be.herokuapp.com/api/upload/avatar\", {\r\n          data,\r\n          username: restaurant.username,\r\n        })\r\n        .then((res) => {\r\n          axios\r\n            .put(\r\n              `https://prigider-be.herokuapp.com/api/restaurant/${restaurant._id}`,\r\n              {\r\n                avatarUrl: res.data,\r\n              }\r\n            )\r\n            .then((res) => {\r\n              dispatch({\r\n                type: \"UPDATE_RESTAURANT\",\r\n                payload: { ...res.data },\r\n              });\r\n              localStorage.setItem(\"restaurant\", JSON.stringify(res.data));\r\n              setLoading(false);\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          if (err) {\r\n            console.error(\"avatar upload error\");\r\n          }\r\n        });\r\n    };\r\n  };\r\n\r\n  const logOutBtn = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const editAccountButtonClickHandler = () => {\r\n    dispatch({ type: \"EDIT_ACCOUNT\", payload: true });\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMenuHeight(accountMenuRef.current.clientHeight);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"file\"\r\n        name=\"upload-avatar-input\"\r\n        id=\"upload-avatar-input\"\r\n        style={{ display: \"none\" }}\r\n        accept=\"image/*\"\r\n        ref={uploadAvatarRef}\r\n        onChange={(e) => avatarInputChangeHandler(e.target.files[0])}\r\n      />\r\n      <div\r\n        className={`RestaurantImageButton ${showAccountMenu ? \"opened\" : \"\"}`}\r\n        onClick={restaurantImageButtonClickButton}\r\n      >\r\n        <img src={restaurant.avatarUrl} alt=\"restaurant-avatar\" />\r\n      </div>\r\n      <div\r\n        className={`AccountMenu ${showAccountMenu ? \"opened\" : \"\"}`}\r\n        style={{\r\n          \"--menu-height\": `-${menuHeight}px`,\r\n          \"--menu-height-10\": `-${menuHeight + 10}px`,\r\n        }}\r\n        ref={accountMenuRef}\r\n      >\r\n        <div className=\"main-restaurant-avatar\">\r\n          <img src={restaurant.avatarUrl} alt=\"restaurant-avatar\" />\r\n          {loading && (\r\n            <div className=\"loading-container\">\r\n              <ReactLoading\r\n                type={\"spokes\"}\r\n                color={\"rgb(72, 133, 184)\"}\r\n                width={50}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"upload-back\"></div>\r\n          <div className=\"upload-photo\" onMouseUp={uploadAvatarClickHandler}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n              <path d=\"M342.7 144H464v288H48V144h121.3l24-64h125.5l23.9 64zM324.3 32h-131c-20 0-37.9 12.4-44.9 31.1L136 96H48c-26.5 0-48 21.5-48 48v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V144c0-26.5-21.5-48-48-48h-88l-14.3-38c-5.8-15.7-20.7-26-37.4-26zM256 408c-66.2 0-120-53.8-120-120s53.8-120 120-120 120 53.8 120 120-53.8 120-120 120zm0-192c-39.7 0-72 32.3-72 72s32.3 72 72 72 72-32.3 72-72-32.3-72-72-72z\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div className=\"menu-text\">\r\n          <p>{restaurant.restaurantName}</p>\r\n          <p>{restaurant.branch === \"\" ? \"main branch\" : restaurant.branch}</p>\r\n        </div>\r\n        <div>\r\n          <button onClick={editAccountButtonClickHandler}>Edit account</button>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <button onClick={logOutBtn}>Log out</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountMenu;\r\n","import \"./Header.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AccountMenu from \"../AccountMenu/AccountMenu\";\r\n\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nconst Header = ({ showAccountMenu, setShowAccountMenu }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const brandClickHandler = () => {\r\n    if (localStorage.getItem(\"restaurant\")) {\r\n      history.push(\"/\");\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"Header\">\r\n      <div className=\"prigider\">\r\n        <div className=\"prigider-brand\" onClick={brandClickHandler}>\r\n          <img\r\n            className=\"fridge\"\r\n            src=\"https://image.flaticon.com/icons/png/512/3134/3134828.png\"\r\n            alt=\"prigider logo\"\r\n          />\r\n          <h1>\r\n            Prigi<span>der</span>\r\n          </h1>\r\n        </div>\r\n        {location.pathname !== \"/login\" &&\r\n          location.pathname !== \"/register\" && (\r\n            <AccountMenu\r\n              showAccountMenu={showAccountMenu}\r\n              setShowAccountMenu={setShowAccountMenu}\r\n            />\r\n          )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./SideNav.css\";\r\n\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst SideNav = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"SideNav\">\r\n      <p\r\n        className={\r\n          location.pathname === \"/\"\r\n            ? \"selected\"\r\n            : location.pathname === \"/inventory\"\r\n            ? \"selected\"\r\n            : null\r\n        }\r\n        onClick={() => history.push(\"/inventory\")}\r\n      >\r\n        inventory\r\n      </p>\r\n      <p\r\n        className={location.pathname === \"/recipes\" ? \"selected\" : null}\r\n        onClick={() => history.push(\"/recipes\")}\r\n      >\r\n        recipes\r\n      </p>\r\n      <p\r\n        className={location.pathname === \"/basket\" ? \"selected\" : null}\r\n        onClick={() => history.push(\"/basket\")}\r\n      >\r\n        basket\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import \"./Layout.css\";\r\nimport Header from \"../Header/Header\";\r\nimport SideNav from \"../SideNav/SideNav\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst Layout = (props) => {\r\n  const [showAccountMenu, setShowAccountMenu] = useState(false);\r\n\r\n  const closeAccountMenu = () => {\r\n    setShowAccountMenu(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header\r\n          showAccountMenu={showAccountMenu}\r\n          setShowAccountMenu={setShowAccountMenu}\r\n        />\r\n      </header>\r\n      <div className=\"Layout\" onClick={closeAccountMenu}>\r\n        <button\r\n          className=\"hamburger\"\r\n          onClick={(e) => {\r\n            e.target.classList.toggle(\"open\");\r\n            e.target.parentElement\r\n              .querySelector(\".SideNav\")\r\n              .classList.toggle(\"open\");\r\n          }}\r\n        >\r\n          ☰\r\n        </button>\r\n        <SideNav />\r\n        {props.children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import \"./InventoryItem.css\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport axios from \"axios\";\r\n\r\nconst InventoryItem = ({ ingredient }) => {\r\n  const restaurant = useSelector((state) => state.restaurant);\r\n  const weightUnits = useSelector((state) => state.weightUnits);\r\n  const volumeUnits = useSelector((state) => state.volumeUnits);\r\n  const ingredients = useSelector((state) => state.ingredients);\r\n  const [loading, setLoading] = useState(false);\r\n  const [expand, setExpand] = useState(\"closed\");\r\n  const [updateType, setUpdateType] = useState(\"\");\r\n  const [unit, setUnit] = useState(ingredient.displayUnit);\r\n  const [bottomDivContentHeight, setBottomDivContentHeight] = useState(0);\r\n  const [bottomButtonText, setBottomButtonText] = useState(\"view details\");\r\n\r\n  const [updateQuantity, setUpdateQuantity] = useState(\"\");\r\n  const [updateUnit, setUpdateUnit] = useState(ingredient.displayUnit);\r\n  const [updateTotalCost, setUpdateTotalCost] = useState(\"\");\r\n\r\n  const updateInventoryRef = useRef(null);\r\n  const inventoryDetailsRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const deleteButtonClickHandler = (name) => {\r\n    if (\r\n      window.confirm(`Are you sure you want to delete ${name.toUpperCase()}?`)\r\n    ) {\r\n      setLoading(true);\r\n      axios\r\n        .delete(\r\n          `https://prigider-be.herokuapp.com/api/ingredients/${ingredient._id}`\r\n        )\r\n        .then(async (res) => {\r\n          let ingredientIds = await ingredients.map(\r\n            (ingredient) => ingredient._id\r\n          );\r\n          ingredientIds = await ingredientIds.filter(\r\n            (id) => id !== res.data._id\r\n          );\r\n          axios\r\n            .put(\r\n              `https://prigider-be.herokuapp.com/api/restaurant/${restaurant._id}`,\r\n              {\r\n                ingredients: [...ingredientIds],\r\n              }\r\n            )\r\n            .then(async (res) => {\r\n              let restaurantData = await res.data;\r\n              dispatch({ type: \"UPDATE_RESTAURANT\", payload: restaurantData });\r\n              dispatch({\r\n                type: \"UPDATE_INGREDIENTS\",\r\n                payload: restaurantData.ingredients,\r\n              });\r\n              dispatch({\r\n                type: \"UPDATE_RECIPES\",\r\n                payload: restaurantData.recipes,\r\n              });\r\n              localStorage.setItem(\r\n                \"restaurant\",\r\n                JSON.stringify(restaurantData)\r\n              );\r\n              localStorage.setItem(\r\n                \"ingredients\",\r\n                JSON.stringify(restaurantData.ingredients)\r\n              );\r\n              localStorage.setItem(\r\n                \"recipes\",\r\n                JSON.stringify(restaurantData.recipes)\r\n              );\r\n\r\n              setLoading(false);\r\n              alert(`${name.toUpperCase()} has been deleted`);\r\n            });\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          alert(\"communication error\");\r\n        });\r\n\r\n      dispatch({ type: \"EMPTY_BASKET\", payload: \"empty\" });\r\n    }\r\n  };\r\n\r\n  const editButtonClickHandler = (ingredient) => {\r\n    dispatch({ type: \"EDIT_INGREDIENT\", payload: ingredient });\r\n    history.push(\"/add-ingredient\");\r\n  };\r\n\r\n  const updateInventoryButtonClickHandler = async (type) => {\r\n    await setUpdateType(type);\r\n    setExpand(\"update\");\r\n    setBottomButtonText(\"cancel\");\r\n    setBottomDivContentHeight(updateInventoryRef.current.clientHeight);\r\n  };\r\n\r\n  const changeInventoryQuantityClickHandler = () => {\r\n    setLoading(true);\r\n    dispatch({ type: \"EMPTY_BASKET\", payload: \"empty\" });\r\n\r\n    let convertedQuantity = Number(updateQuantity);\r\n    // conversions\r\n    if (updateUnit !== \"piece\") {\r\n      // convert quantity to grams, if unit is weight\r\n      if (weightUnits.some((weight) => weight.name === updateUnit)) {\r\n        convertedQuantity =\r\n          updateQuantity *\r\n          weightUnits.find((weight) => weight.name === updateUnit).conversion;\r\n      } else {\r\n        // if unit is volume and not weight\r\n        convertedQuantity =\r\n          ingredient.density *\r\n          (updateQuantity *\r\n            volumeUnits.find((volume) => volume.name === updateUnit)\r\n              .conversion);\r\n      }\r\n    }\r\n\r\n    if (updateType === \"increase\") {\r\n      axios\r\n        .put(\r\n          `https://prigider-be.herokuapp.com/api/ingredients/${ingredient._id}`,\r\n          {\r\n            quantity: ingredient.quantity + convertedQuantity,\r\n            totalCost: ingredient.totalCost + Number(updateTotalCost),\r\n          }\r\n        )\r\n        .then((res) => {\r\n          axios(\r\n            `https://prigider-be.herokuapp.com/api/restaurant/${restaurant.username}`\r\n          ).then((res) => {\r\n            dispatch({\r\n              type: \"UPDATE_INGREDIENTS\",\r\n              payload: [...res.data[0].ingredients],\r\n            });\r\n            localStorage.setItem(\r\n              \"ingredients\",\r\n              JSON.stringify(res.data[0].ingredients)\r\n            );\r\n\r\n            setLoading(false);\r\n            alert(\r\n              `${ingredient.name.toUpperCase()} has been successfully updated`\r\n            );\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          alert(\"communication error\");\r\n        });\r\n    } else {\r\n      let newQuantity = ingredient.quantity - convertedQuantity;\r\n      if (newQuantity < 0) {\r\n        newQuantity = 0;\r\n      }\r\n      let totalCostReduction =\r\n        (ingredient.totalCost * convertedQuantity) / ingredient.quantity;\r\n      let newTotalCost = ingredient.totalCost - totalCostReduction;\r\n      if (newTotalCost < 0) {\r\n        newTotalCost = 0;\r\n      }\r\n      axios\r\n        .put(\r\n          `https://prigider-be.herokuapp.com/api/ingredients/${ingredient._id}`,\r\n          {\r\n            quantity: newQuantity,\r\n            totalCost: newTotalCost,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          axios(\r\n            `https://prigider-be.herokuapp.com/api/restaurant/${restaurant.username}`\r\n          ).then((res) => {\r\n            dispatch({\r\n              type: \"UPDATE_INGREDIENTS\",\r\n              payload: [...res.data[0].ingredients],\r\n            });\r\n            localStorage.setItem(\r\n              \"ingredients\",\r\n              JSON.stringify(res.data[0].ingredients)\r\n            );\r\n\r\n            setLoading(false);\r\n            alert(\r\n              `${ingredient.name.toUpperCase()} has been successfully updated`\r\n            );\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          alert(\"communication error\");\r\n        });\r\n    }\r\n\r\n    bottomButtonClickHandler();\r\n  };\r\n\r\n  const bottomButtonClickHandler = () => {\r\n    switch (expand) {\r\n      case \"closed\":\r\n        setExpand(\"details\");\r\n        setBottomDivContentHeight(inventoryDetailsRef.current.clientHeight);\r\n        setBottomButtonText(\"hide details\");\r\n        break;\r\n      case \"details\":\r\n        setExpand(\"closed\");\r\n        setBottomButtonText(\"view details\");\r\n        break;\r\n      case \"update\":\r\n        setExpand(\"closed\");\r\n        setBottomButtonText(\"view details\");\r\n        setUpdateType(\"\");\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Number(updateQuantity) < 0) {\r\n      setUpdateQuantity(0);\r\n    }\r\n    if (Number(updateTotalCost) < 0) {\r\n      setUpdateTotalCost(0);\r\n    }\r\n  }, [updateQuantity, updateTotalCost]);\r\n\r\n  return (\r\n    <div className=\"InventoryItem\">\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <ReactLoading\r\n            type={\"spokes\"}\r\n            color={\"rgb(72, 133, 184)\"}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"ingredient-button-group\">\r\n        <div>\r\n          <button\r\n            className=\"increase-inventory-button\"\r\n            onClick={() => updateInventoryButtonClickHandler(\"increase\")}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"reduce-inventory-button\"\r\n            onClick={() => updateInventoryButtonClickHandler(\"reduce\")}\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button onClick={() => editButtonClickHandler(ingredient)}>✏️</button>\r\n          <button onClick={() => deleteButtonClickHandler(ingredient.name)}>\r\n            ❌\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"top-div\">\r\n        <p className=\"inventory-item-name\">{ingredient.name}</p>\r\n        <div>\r\n          <div className=\"inventory-item-quantity\">\r\n            {/* display the converted quantity based on ingredient's unit and density */}\r\n            {unit === \"piece\"\r\n              ? ingredient.quantity\r\n              : weightUnits.some((weight) => weight.name === unit)\r\n              ? (\r\n                  ingredient.quantity /\r\n                  weightUnits.find((weight) => weight.name === unit).conversion\r\n                ).toFixed(3)\r\n              : (\r\n                  ingredient.quantity /\r\n                  volumeUnits.find((volume) => volume.name === unit)\r\n                    .conversion /\r\n                  ingredient.density\r\n                ).toFixed(3)}\r\n          </div>\r\n          <div className=\"inventory-item-unit\">\r\n            <select\r\n              name=\"edit-unit\"\r\n              id=\"edit-unit\"\r\n              value={unit}\r\n              onChange={(e) => setUnit(e.target.value)}\r\n            >\r\n              <option hidden value={ingredient.displayUnit}>\r\n                {ingredient.displayUnit}\r\n              </option>\r\n              {ingredient.displayUnit === \"piece\" && (\r\n                <option value=\"piece\">piece</option>\r\n              )}\r\n              {ingredient.displayUnit !== \"piece\" && (\r\n                <optgroup label=\"Weight\">\r\n                  {weightUnits.map((unit) => (\r\n                    <option\r\n                      key={`inventoryItem-weight-${unit.name}`}\r\n                      value={unit.name}\r\n                    >\r\n                      {unit.name}\r\n                    </option>\r\n                  ))}\r\n                </optgroup>\r\n              )}\r\n              {ingredient.displayUnit !== \"piece\" && (\r\n                <optgroup label=\"Volume\">\r\n                  {volumeUnits.map((unit) => (\r\n                    <option\r\n                      key={`inventoryItem-volume-${unit.name}`}\r\n                      value={unit.name}\r\n                    >\r\n                      {unit.name}\r\n                    </option>\r\n                  ))}\r\n                </optgroup>\r\n              )}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* all the bottom divs here */}\r\n      {/* for details */}\r\n      <div\r\n        className=\"bottom-div\"\r\n        style={\r\n          expand === \"details\"\r\n            ? {\r\n                height: `${bottomDivContentHeight}px`,\r\n                visibility: \"visible\",\r\n              }\r\n            : {\r\n                height: 0,\r\n                visibility: \"hidden\",\r\n              }\r\n        }\r\n      >\r\n        <div className=\"bottom-div-content\" ref={inventoryDetailsRef}>\r\n          <p> Category: {ingredient.category} </p>\r\n          <p> Location: {ingredient.location} </p>\r\n          <p> Total Cost: Php {ingredient.totalCost.toFixed(2)} </p>\r\n          <p> Remarks: {ingredient.remarks} </p>\r\n        </div>\r\n      </div>\r\n      {/* for updating inventory */}\r\n      <div\r\n        className=\"bottom-div update-inventory-div\"\r\n        style={\r\n          expand === \"update\"\r\n            ? {\r\n                height: `${bottomDivContentHeight + 10}px`,\r\n                visibility: \"visible\",\r\n              }\r\n            : {\r\n                height: 0,\r\n                visibility: \"hidden\",\r\n              }\r\n        }\r\n      >\r\n        <div\r\n          className=\"bottom-div-content update-inventory\"\r\n          ref={updateInventoryRef}\r\n        >\r\n          <div className=\"input-row\">\r\n            <label htmlFor=\"update-quantity\">quantity:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"update-quantity\"\r\n              value={updateQuantity}\r\n              onChange={(e) => setUpdateQuantity(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-row\">\r\n            <label htmlFor=\"unit\">unit:</label>\r\n            <select\r\n              name=\"unit\"\r\n              id=\"unit\"\r\n              value={updateUnit}\r\n              onChange={(e) => setUpdateUnit(e.target.value)}\r\n            >\r\n              {ingredient.displayUnit === \"piece\" ? (\r\n                <optgroup label=\"Piece\">\r\n                  <option value=\"piece\">piece</option>\r\n                </optgroup>\r\n              ) : (\r\n                <>\r\n                  <optgroup label=\"Weight\">\r\n                    {weightUnits.map((unit) => (\r\n                      <option\r\n                        key={`update-ingredient-inv-item-weight-${unit.name}`}\r\n                        value={unit.name}\r\n                      >\r\n                        {unit.name}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                  <optgroup label=\"Volume\">\r\n                    {volumeUnits.map((unit) => (\r\n                      <option\r\n                        key={`update-ingredient-inv-item-volume-${unit.name}`}\r\n                        value={unit.name}\r\n                      >\r\n                        {unit.name}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                </>\r\n              )}\r\n            </select>\r\n          </div>\r\n          {updateType === \"increase\" && (\r\n            <div className=\"input-row\">\r\n              <label htmlFor=\"update-total-cost\">cost:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"update-total-cost\"\r\n                value={updateTotalCost}\r\n                onChange={(e) => setUpdateTotalCost(e.target.value)}\r\n              ></input>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* end of bottom divs here */}\r\n      <div className=\"bottom-button-group\">\r\n        {updateType !== \"\" && (\r\n          <button\r\n            className=\"proceed-button\"\r\n            style={\r\n              (updateType === \"reduce\" && updateQuantity !== \"\") ||\r\n              (updateType === \"increase\" &&\r\n                updateQuantity !== \"\" &&\r\n                updateTotalCost !== \"\")\r\n                ? { backgroundColor: \"green\", color: \"white\" }\r\n                : null\r\n            }\r\n            disabled={\r\n              updateQuantity === \"\" ||\r\n              (updateTotalCost === \"\" && updateType === \"increase\")\r\n                ? true\r\n                : false\r\n            }\r\n            onClick={changeInventoryQuantityClickHandler}\r\n          >\r\n            proceed\r\n          </button>\r\n        )}\r\n        <button\r\n          className=\"cancel-button\"\r\n          onClick={bottomButtonClickHandler}\r\n          style={\r\n            updateType !== \"\"\r\n              ? { backgroundColor: \"red\", color: \"white\" }\r\n              : null\r\n          }\r\n        >\r\n          {bottomButtonText}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItem;\r\n","import \"./InventoryList.css\";\r\nimport InventoryItem from \"../InventoryItem/InventoryItem\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst InventoryList = () => {\r\n  const ingredientsSelector = useSelector((state) => state.ingredients);\r\n  const [ingredients, setIngredients] = useState(ingredientsSelector);\r\n  const [displayIngredients, setDisplayIngredients] = useState(ingredients);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const addInventoryButtonClickHandler = () => {\r\n    dispatch({ type: \"CLEAR_INGREDIENT_EDIT\" });\r\n    history.push(\"/add-ingredient\");\r\n  };\r\n\r\n  const searchBarChangeHandler = (value) => {\r\n    let searchInput = value.trim().toLowerCase();\r\n    if (searchInput === \"\") {\r\n      return setDisplayIngredients(ingredients);\r\n    }\r\n    let filteredIngredients = ingredients.filter(\r\n      (ingredient) => ingredient.name.indexOf(searchInput) !== -1\r\n    );\r\n    setDisplayIngredients(filteredIngredients);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ingredientsSelector) {\r\n      setIngredients(ingredientsSelector);\r\n    }\r\n  }, [ingredientsSelector]);\r\n\r\n  useEffect(() => {\r\n    setDisplayIngredients(ingredients);\r\n  }, [ingredients]);\r\n\r\n  return (\r\n    <div className=\"InventoryList\">\r\n      <button onClick={addInventoryButtonClickHandler}>add ingredient</button>\r\n      <div className=\"search-bar\">\r\n        <div className=\"search-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => searchBarChangeHandler(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"search-icon\">\r\n          <svg focusable=\"false\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div className=\"inventory-list-container\">\r\n        {displayIngredients\r\n          ? displayIngredients.map((ingredient) => (\r\n              <InventoryItem\r\n                key={`inventory-item-${ingredient._id}`}\r\n                ingredient={ingredient}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryList;\r\n","import \"./RecipeBox.css\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst RecipeBox = ({ recipe, notEnough, notInBasket, basketCounter }) => {\r\n  const recipes = useSelector((state) => state.recipes);\r\n  const restaurant = useSelector((state) => state.restaurant);\r\n  const ingredientsSelector = useSelector((state) => state.ingredients);\r\n  const [ingredients, setIngredients] = useState(ingredientsSelector);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteButtonClickHandler = (name) => {\r\n    setLoading(true);\r\n    if (\r\n      window.confirm(`Are you sure you want to delete ${name.toUpperCase()}?`)\r\n    ) {\r\n      axios\r\n        .delete(`https://prigider-be.herokuapp.com/api/recipe/${recipe._id}`)\r\n        .then(async (res) => {\r\n          let recipeIds = await recipes.map((recipe) => recipe._id);\r\n          recipeIds = await recipeIds.filter((id) => id !== res.data._id);\r\n          axios\r\n            .put(\r\n              `https://prigider-be.herokuapp.com/api/restaurant/${restaurant._id}`,\r\n              {\r\n                recipes: [...recipeIds],\r\n              }\r\n            )\r\n            .then((res) => {\r\n              axios(\r\n                `https://prigider-be.herokuapp.com/api/restaurant/${restaurant.username}`\r\n              ).then((res) => {\r\n                dispatch({\r\n                  type: \"UPDATE_RESTAURANT\",\r\n                  payload: res.data[0],\r\n                });\r\n                dispatch({\r\n                  type: \"UPDATE_RECIPES\",\r\n                  payload: res.data[0].recipes,\r\n                });\r\n                dispatch({\r\n                  type: \"UPDATE_INGREDIENTS\",\r\n                  payload: res.data[0].ingredients,\r\n                });\r\n                localStorage.setItem(\"restaurant\", JSON.stringify(res.data[0]));\r\n                localStorage.setItem(\r\n                  \"recipes\",\r\n                  JSON.stringify(res.data[0].recipes)\r\n                );\r\n                localStorage.setItem(\r\n                  \"ingredients\",\r\n                  JSON.stringify(res.data[0].ingredients)\r\n                );\r\n\r\n                setLoading(false);\r\n                alert(`${name.toUpperCase()} has been deleted`);\r\n              });\r\n            });\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          alert(\"communication error\");\r\n        });\r\n\r\n      dispatch({ type: \"EMPTY_BASKET\", payload: \"empty\" });\r\n    }\r\n  };\r\n\r\n  const editBtn = (recipe) => {\r\n    dispatch({ type: \"EDIT_RECIPE\", payload: recipe });\r\n  };\r\n\r\n  const addToBasket = (recipe) => {\r\n    dispatch({ type: \"ADD_TO_BASKET\", payload: recipe });\r\n  };\r\n\r\n  const subtractToBasket = (recipe) => {\r\n    dispatch({ type: \"SUBTRACT_TO_BASKET\", payload: recipe });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ingredientsSelector) {\r\n      setIngredients(ingredientsSelector);\r\n    }\r\n  }, [ingredientsSelector]);\r\n\r\n  return (\r\n    <div\r\n      className=\"RecipeBox\"\r\n      style={notEnough ? { backgroundColor: \"silver\" } : null}\r\n    >\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <ReactLoading\r\n            type={\"spokes\"}\r\n            color={\"rgb(72, 133, 184)\"}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n      <div>\r\n        <div className=\"recipe-name\">{recipe.name}</div>\r\n        <p className=\"ingredient-title\">Ingredients:</p>\r\n        <ol>\r\n          {recipe.recipeIngredients.map((ingredient) => {\r\n            let exists = ingredients.find(\r\n              (ingredientRedux) =>\r\n                ingredientRedux._id === ingredient.ingredient._id\r\n            );\r\n            let style =\r\n              exists === undefined\r\n                ? { color: \"red\" }\r\n                : ingredient.quantity <= exists.quantity\r\n                ? null\r\n                : { color: \"red\" };\r\n\r\n            return (\r\n              <li key={`${ingredient._id}-$ingredientGroup`} style={style}>\r\n                {exists ? null : (\r\n                  <span\r\n                    className=\"warning bg-warning\"\r\n                    data-toggle=\"tooltip\"\r\n                    data-placement=\"right\"\r\n                    title=\"This ingredient doesn't exist on your database.\"\r\n                  >\r\n                    !\r\n                  </span>\r\n                )}\r\n                <span>\r\n                  {ingredient.ingredient && ingredient.ingredient.name}\r\n                </span>\r\n                <span>\r\n                  {ingredient.quantity} {ingredient.displayUnit}\r\n                </span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ol>\r\n      </div>\r\n      <div className=\"button-group\">\r\n        <Link to=\"/add-recipe\">\r\n          <button onClick={() => editBtn(recipe)}>✏️</button>\r\n        </Link>\r\n        <button onClick={() => deleteButtonClickHandler(recipe.name)}>\r\n          ❌\r\n        </button>\r\n      </div>\r\n      <div className=\"basket-button-group\">\r\n        <button onClick={() => subtractToBasket(recipe)} disabled={notInBasket}>\r\n          -\r\n        </button>\r\n        <span>{basketCounter}</span>\r\n        <button onClick={() => addToBasket(recipe)} disabled={notEnough}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeBox;\r\n","import \"./RecipesList.css\";\r\nimport RecipeBox from \"../RecipeBox/RecipeBox\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst RecipesList = () => {\r\n  const basket = useSelector((state) => state.basket);\r\n  const recipesSelector = useSelector((state) => state.recipes);\r\n  const ingredientsSelector = useSelector((state) => state.ingredients);\r\n\r\n  const [recipes, setRecipes] = useState(recipesSelector);\r\n  const [displayRecipes, setDisplayRecipes] = useState(recipes);\r\n  const [filterRecipeDisplay, setFilterRecipeDisplay] = useState(1);\r\n  const [ingredients, setIngredients] = useState(ingredientsSelector);\r\n  const [displayFilteredRecipes, setDisplayFilteredRecipes] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const addRecipeButtonClickHandler = () => {\r\n    history.push(\"/add-recipe\");\r\n  };\r\n\r\n  const searchBarChangeHandler = (value) => {\r\n    let searchInput = value.trim().toLowerCase();\r\n    if (searchInput === \"\") {\r\n      return setDisplayRecipes(recipes);\r\n    }\r\n    let filteredRecipes = recipes.filter(\r\n      (ingredient) => ingredient._id.indexOf(searchInput) !== -1\r\n    );\r\n    setDisplayRecipes(filteredRecipes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recipesSelector) {\r\n      setRecipes(recipesSelector);\r\n    }\r\n  }, [recipesSelector]);\r\n\r\n  useEffect(() => {\r\n    setDisplayRecipes(recipes);\r\n  }, [recipes]);\r\n\r\n  useEffect(() => {\r\n    if (ingredientsSelector) {\r\n      setIngredients(ingredientsSelector);\r\n    }\r\n  }, [ingredientsSelector]);\r\n\r\n  useEffect(() => {\r\n    // filter out all recipes with not enough ingredients\r\n    let hideAllRecipes = displayRecipes.map((recipe) => {\r\n      let notEnough = false;\r\n\r\n      recipe.recipeIngredients.forEach((recipeIngredient) => {\r\n        const ingredientToCompare = ingredients.find(\r\n          (ingredient) => ingredient._id === recipeIngredient.ingredient._id\r\n        );\r\n        if (\r\n          ingredientToCompare === undefined ||\r\n          ingredientToCompare.quantity < recipeIngredient.quantity\r\n        ) {\r\n          notEnough = true;\r\n        }\r\n      });\r\n\r\n      return notEnough ? null : recipe;\r\n    });\r\n    hideAllRecipes = hideAllRecipes.filter((recipe) => recipe !== null);\r\n\r\n    // filter out only recipes with not enough ingredients and not in the basket\r\n    let hideSomeRecipes = displayRecipes.map((recipe) => {\r\n      let notEnough = false;\r\n      let notInBasket = true;\r\n\r\n      recipe.recipeIngredients.forEach((recipeIngredient) => {\r\n        const ingredientToCompare = ingredients.find(\r\n          (ingredient) => ingredient._id === recipeIngredient.ingredient._id\r\n        );\r\n        if (\r\n          ingredientToCompare === undefined ||\r\n          ingredientToCompare.quantity < recipeIngredient.quantity\r\n        ) {\r\n          notEnough = true;\r\n        }\r\n      });\r\n      basket.forEach((item) => {\r\n        if (recipe._id === item._id) {\r\n          return (notInBasket = false);\r\n        }\r\n      });\r\n\r\n      return notEnough && notInBasket ? null : recipe;\r\n    });\r\n    hideSomeRecipes = hideSomeRecipes.filter((recipe) => recipe !== null);\r\n\r\n    switch (filterRecipeDisplay) {\r\n      case 1:\r\n        return setDisplayFilteredRecipes([...displayRecipes]);\r\n      case 2:\r\n        return setDisplayFilteredRecipes([...hideSomeRecipes]);\r\n      case 3:\r\n        return setDisplayFilteredRecipes([...hideAllRecipes]);\r\n      default:\r\n        return setDisplayFilteredRecipes([...displayRecipes]);\r\n    }\r\n  }, [filterRecipeDisplay, recipes, ingredients, basket, displayRecipes]);\r\n\r\n  return (\r\n    <div className=\"RecipesList\">\r\n      <button onClick={addRecipeButtonClickHandler}>add recipe</button>\r\n      <div className=\"search-bar\">\r\n        <div className=\"search-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => searchBarChangeHandler(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"search-icon\">\r\n          <svg focusable=\"false\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div className=\"recipes-main-container\">\r\n        <div className=\"recipes-filter\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filter-recipe-display\"\r\n            id=\"show-all\"\r\n            onClick={() => setFilterRecipeDisplay(1)}\r\n            defaultChecked\r\n          />\r\n          <label htmlFor=\"show-all\">show all</label>\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filter-recipe-display\"\r\n            id=\"hide-some\"\r\n            onClick={() => setFilterRecipeDisplay(2)}\r\n          />\r\n          <label htmlFor=\"hide-some\">hide some</label>\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filter-recipe-display\"\r\n            id=\"hide-all\"\r\n            onClick={() => setFilterRecipeDisplay(3)}\r\n          />\r\n          <label htmlFor=\"hide-all\">hide all</label>\r\n        </div>\r\n        <div className=\"recipes-container\">\r\n          {displayFilteredRecipes.map((recipe) => {\r\n            let notEnough = false;\r\n            let notInBasket = true;\r\n\r\n            // check if ingredients are not enough\r\n            recipe.recipeIngredients.forEach((recipeIngredient) => {\r\n              if (recipeIngredient.ingredient === null) {\r\n                return (notEnough = true);\r\n              }\r\n              const ingredientToCompare = ingredients.find(\r\n                (ingredient) =>\r\n                  ingredient._id === recipeIngredient.ingredient._id\r\n              );\r\n              if (\r\n                ingredientToCompare === undefined ||\r\n                ingredientToCompare.quantity < recipeIngredient.quantity\r\n              ) {\r\n                notEnough = true;\r\n              }\r\n            });\r\n\r\n            // check if recipe is not in basket\r\n            basket.forEach((item) => {\r\n              if (recipe._id === item._id) {\r\n                return (notInBasket = false);\r\n              }\r\n            });\r\n\r\n            // check how many recipe already in the basket\r\n            let basketCounter = basket.find(\r\n              (item) => item.name === recipe.name\r\n            );\r\n            basketCounter =\r\n              basketCounter === undefined ? 0 : basketCounter.itemQuantity;\r\n\r\n            return (\r\n              <RecipeBox\r\n                key={`recipe-list-${recipe.name}`}\r\n                recipe={recipe}\r\n                notEnough={notEnough}\r\n                notInBasket={notInBasket}\r\n                basketCounter={basketCounter}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipesList;\r\n","import \"./BasketItem.css\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst BasketItem = ({ item, notEnough }) => {\r\n  const [itemCost, setItemCost] = useState(0);\r\n  const [expand, setExpand] = useState(false);\r\n  const [basketBottomDivContentHeight, setBasketBottomDivContentHeight] =\r\n    useState(0);\r\n\r\n  const basketBottomDivContentRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const viewDetailsClickHandler = () => {\r\n    if (expand) {\r\n      setExpand(false);\r\n      setBasketBottomDivContentHeight(0);\r\n    } else {\r\n      setExpand(true);\r\n      setBasketBottomDivContentHeight(\r\n        basketBottomDivContentRef.current.clientHeight\r\n      );\r\n    }\r\n  };\r\n\r\n  const addToBasket = (item) => {\r\n    dispatch({ type: \"ADD_TO_BASKET\", payload: item });\r\n  };\r\n\r\n  const subtractToBasket = (item) => {\r\n    if (item.itemQuantity === 1) {\r\n      return;\r\n    }\r\n    dispatch({ type: \"SUBTRACT_TO_BASKET\", payload: item });\r\n  };\r\n\r\n  const deleteFromBasket = (item) => {\r\n    dispatch({ type: \"DELETE_FROM_BASKET\", payload: item });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newCost = 0;\r\n    item.recipeIngredients.forEach(\r\n      (ingredient) => (newCost += ingredient.ingredient.totalCost)\r\n    );\r\n    setItemCost(newCost);\r\n  }, [item.recipeIngredients]);\r\n\r\n  return (\r\n    <div className=\"BasketItem\">\r\n      <div className=\"top-div\">\r\n        <p className=\"basket-item-name\">{item.name}</p>\r\n        <div className=\"basket-item-buttons\">\r\n          Quantity:\r\n          <button\r\n            className=\"quantity-button\"\r\n            onClick={() => subtractToBasket(item)}\r\n            disabled={item.itemQuantity <= 1 ? true : false}\r\n          >\r\n            -\r\n          </button>\r\n          <span>{item.itemQuantity}</span>\r\n          <button\r\n            className=\"quantity-button\"\r\n            onClick={() => addToBasket(item)}\r\n            disabled={notEnough}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"delete-button\"\r\n            onClick={() => deleteFromBasket(item)}\r\n          >\r\n            ❌\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"bottom-div\"\r\n        style={{ height: `${basketBottomDivContentHeight}px` }}\r\n      >\r\n        <div className=\"bottom-div-content\" ref={basketBottomDivContentRef}>\r\n          <p>Category: {item.category}</p>\r\n          <p>Details: {item.details}</p>\r\n          <p>Cost Per Item: Php {itemCost.toFixed(2)}</p>\r\n          <p>Total Cost: Php {(itemCost * item.itemQuantity).toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n      <button className=\"view-button\" onClick={viewDetailsClickHandler}>\r\n        {expand ? \"hide\" : \"view\"} details\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasketItem;\r\n","import \"./Basket.css\";\r\nimport BasketItem from \"../BasketItem/BasketItem\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst Basket = () => {\r\n  const basket = useSelector((state) => state.basket);\r\n  const restaurant = useSelector((state) => state.restaurant);\r\n  const ingredients = useSelector((state) => state.ingredients);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const confirmBasketClickHandler = () => {\r\n    setLoading(true);\r\n\r\n    if (\r\n      window.confirm(\"Do you want to update your inventory with these recipes?\")\r\n    ) {\r\n      // group all ingredients from recipes from the basket into one array\r\n      let ingredientsForReduction = [];\r\n      basket.forEach((item) => {\r\n        item.recipeIngredients.forEach((recipeIngredient) => {\r\n          if (\r\n            ingredientsForReduction.find(\r\n              (ingredient) => ingredient._id === recipeIngredient.ingredient._id\r\n            ) === undefined\r\n          ) {\r\n            ingredientsForReduction.push({\r\n              _id: recipeIngredient.ingredient._id,\r\n              quantity: item.itemQuantity * recipeIngredient.quantity,\r\n              name: recipeIngredient.ingredient.name,\r\n            });\r\n          } else {\r\n            ingredientsForReduction = ingredientsForReduction.map(\r\n              (ingredient) =>\r\n                ingredient._id === recipeIngredient.ingredient._id\r\n                  ? {\r\n                      ...ingredient,\r\n                      quantity:\r\n                        ingredient.quantity +\r\n                        item.itemQuantity * recipeIngredient.quantity,\r\n                    }\r\n                  : ingredient\r\n            );\r\n          }\r\n        });\r\n      });\r\n\r\n      // get final result after inventory reduction\r\n      let reducedIngredients = ingredientsForReduction.map((ingredientFR) => {\r\n        let remainingQuantity = ingredients.find(\r\n          (ingredient) => ingredient._id === ingredientFR._id\r\n        ).quantity;\r\n        let initialTotalCost = ingredients.find(\r\n          (ingredient) => ingredient._id === ingredientFR._id\r\n        ).totalCost;\r\n        let initialQuantity = ingredientFR.quantity + remainingQuantity;\r\n        let remainingTotalCost =\r\n          (remainingQuantity * initialTotalCost) / initialQuantity;\r\n        return {\r\n          ...ingredientFR,\r\n          quantity: remainingQuantity,\r\n          totalCost: remainingTotalCost,\r\n        };\r\n      });\r\n\r\n      // update all ingredients to reduce and update all redux and localStorage\r\n\r\n      reducedIngredients.forEach((ingredient, index) => {\r\n        axios\r\n          .put(\r\n            `https://prigider-be.herokuapp.com/api/ingredients/${ingredient._id}`,\r\n            {\r\n              quantity: ingredient.quantity,\r\n              totalCost: ingredient.totalCost,\r\n            }\r\n          )\r\n          .then(() => {\r\n            if (index === reducedIngredients.length - 1) {\r\n              axios(\r\n                `https://prigider-be.herokuapp.com/api/restaurant/${restaurant.username}`\r\n              )\r\n                .then((res) => {\r\n                  console.log(res.data);\r\n                  dispatch({\r\n                    type: \"UPDATE_INGREDIENTS\",\r\n                    payload: res.data[0].ingredients,\r\n                  });\r\n                  localStorage.setItem(\r\n                    \"ingredients\",\r\n                    JSON.stringify(res.data[0].ingredients)\r\n                  );\r\n                  setLoading(false);\r\n                  alert(\"Inventory updated\");\r\n                })\r\n                .catch(() => {\r\n                  setLoading(false);\r\n                  return alert(\"error in updating page\");\r\n                });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            return alert(\"error in updating ingredients\");\r\n          });\r\n      });\r\n    }\r\n    dispatch({ type: \"EMPTY_BASKET\", payload: \"confirm\" });\r\n  };\r\n\r\n  const emptyBasketClickHandler = () => {\r\n    if (window.confirm(\"Are you sure you want to empty the basket?\")) {\r\n      dispatch({ type: \"EMPTY_BASKET\", payload: \"empty\" });\r\n      alert(\"Basket emptied\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Basket\">\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <ReactLoading\r\n            type={\"spokes\"}\r\n            color={\"rgb(72, 133, 184)\"}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n      <button\r\n        className=\"btn btn-success confirm-button\"\r\n        onClick={confirmBasketClickHandler}\r\n        disabled={basket.length === 0 && true}\r\n      >\r\n        confirm\r\n      </button>\r\n      <button\r\n        className=\"btn btn-danger empty-button\"\r\n        onClick={emptyBasketClickHandler}\r\n        disabled={basket.length === 0 && true}\r\n      >\r\n        empty\r\n      </button>\r\n      <div className=\"basket-item-container\">\r\n        {basket.map((item) => {\r\n          let notEnough = false;\r\n\r\n          item.recipeIngredients.forEach((itemIngredient) => {\r\n            const ingredientToCompare = ingredients.find(\r\n              (ingredient) => ingredient.name === itemIngredient.ingredient.name\r\n            );\r\n            if (\r\n              ingredientToCompare === undefined ||\r\n              ingredientToCompare.quantity < itemIngredient.quantity\r\n            ) {\r\n              notEnough = true;\r\n            }\r\n          });\r\n\r\n          return (\r\n            <BasketItem\r\n              item={item}\r\n              key={`basket-item-${item._id}`}\r\n              notEnough={notEnough}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Basket;\r\n","import \"./AddIngredient.css\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactLoading from \"react-loading\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddIngredient = ({\r\n  ingredients,\r\n  ingredientToEdit,\r\n  ingredientIsEdit,\r\n  weightUnits,\r\n  volumeUnits,\r\n}) => {\r\n  const restaurant = useSelector((state) => state.restaurant);\r\n  const [name, setName] = useState(\"\");\r\n  const [density, setDensity] = useState(1);\r\n  const [remarks, setRemarks] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [ingredientId, setIngredientId] = useState(\"\");\r\n  const [displayUnit, setDisplayUnit] = useState(\"gram\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  let ingredientCategories = ingredients.map(\r\n    (ingredient) => ingredient.category\r\n  );\r\n  ingredientCategories = [...new Set(ingredientCategories)];\r\n  let ingredientLocations = ingredients.map(\r\n    (ingredient) => ingredient.location\r\n  );\r\n  ingredientLocations = [...new Set(ingredientLocations)];\r\n\r\n  const saveBtnHandler = () => {\r\n    setErrorMsg(\"\");\r\n\r\n    // input validation\r\n    if (name.trim() === \"\") {\r\n      setErrorMsg(\"Name must not be empty\");\r\n    } else if (\r\n      ingredients.some(\r\n        (ingredient) =>\r\n          ingredient.name === name.trim().toLowerCase() &&\r\n          ingredientIsEdit === false\r\n      )\r\n    ) {\r\n      setErrorMsg(\"The ingredient already exists\");\r\n    } else if (quantity < 0) {\r\n      setErrorMsg(\"Quantity must not be zero or less\");\r\n    } else if (quantity % 1 !== 0 && displayUnit === \"piece\") {\r\n      setErrorMsg(\"Quantity must be a whole number when unit is PIECE\");\r\n    } else if (density < 0.001 && displayUnit !== \"piece\") {\r\n      setErrorMsg(\"Density must not be less than 0.001\");\r\n    } else {\r\n      setLoading(true);\r\n      let convertedQuantity;\r\n      // conversions\r\n      if (displayUnit !== \"piece\") {\r\n        // convert quantity to grams, if unit is weight\r\n        if (weightUnits.some((weight) => weight.name === displayUnit)) {\r\n          convertedQuantity =\r\n            quantity *\r\n            weightUnits.find((weight) => weight.name === displayUnit)\r\n              .conversion;\r\n        } else {\r\n          // if unit is volume and not weight\r\n          convertedQuantity =\r\n            density *\r\n            (quantity *\r\n              volumeUnits.find((volume) => volume.name === displayUnit)\r\n                .conversion);\r\n        }\r\n      }\r\n      // check if this is a new ingredient or edited ingredient\r\n      if (ingredientIsEdit === false) {\r\n        axios\r\n          .post(\"https://prigider-be.herokuapp.com/api/ingredients\", {\r\n            name: name.trim().toLowerCase(),\r\n            quantity: convertedQuantity,\r\n            displayUnit,\r\n            density: displayUnit === \"piece\" ? null : density,\r\n            remarks,\r\n            totalCost,\r\n            category: category.trim().toLowerCase(),\r\n            location: location.trim().toLowerCase(),\r\n          })\r\n          .then(async (res) => {\r\n            let ingredientIds = await ingredients.map(\r\n              (ingredient) => ingredient._id\r\n            );\r\n            axios\r\n              .put(\r\n                `https://prigider-be.herokuapp.com/api/restaurant/${restaurant._id}`,\r\n                {\r\n                  ingredients: [...ingredientIds, res.data._id],\r\n                }\r\n              )\r\n              .then((res) => {\r\n                dispatch({ type: \"UPDATE_RESTAURANT\", payload: res.data });\r\n                dispatch({\r\n                  type: \"UPDATE_INGREDIENTS\",\r\n                  payload: res.data.ingredients,\r\n                });\r\n\r\n                localStorage.setItem(\"restaurant\", JSON.stringify(res.data));\r\n                localStorage.setItem(\r\n                  \"ingredients\",\r\n                  JSON.stringify(res.data.ingredients)\r\n                );\r\n\r\n                setLoading(false);\r\n                alert(\r\n                  `Ingredient ${name\r\n                    .trim()\r\n                    .toUpperCase()} has been added to the inventory`\r\n                );\r\n              });\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            alert(\"communication error\");\r\n          });\r\n      } else {\r\n        axios\r\n          .put(\r\n            `https://prigider-be.herokuapp.com/api/ingredients/${ingredientId}`,\r\n            {\r\n              name: name.trim().toLowerCase(),\r\n              quantity: convertedQuantity,\r\n              displayUnit,\r\n              density: displayUnit === \"piece\" ? null : density,\r\n              remarks,\r\n              totalCost,\r\n              category: category.trim().toLowerCase(),\r\n              location: location.trim().toLowerCase(),\r\n            }\r\n          )\r\n          .then((res) => {\r\n            dispatch({ type: \"CONFIRM_EDIT_INGREDIENT\", payload: res.data });\r\n            setLoading(false);\r\n            alert(\r\n              `Ingredient ${name\r\n                .trim()\r\n                .toUpperCase()} has been added to the inventory`\r\n            );\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            alert(\"communication error\");\r\n          });\r\n      }\r\n\r\n      setName(\"\");\r\n      setQuantity(0);\r\n      setDisplayUnit(\"gram\");\r\n      setDensity(1);\r\n      setRemarks(\"\");\r\n      setTotalCost(0);\r\n      setCategory(\"\");\r\n      setLocation(\"\");\r\n      setIngredientId(\"\");\r\n      setErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setName(ingredientToEdit.name);\r\n    setQuantity(ingredientToEdit.quantity);\r\n    setDisplayUnit(ingredientToEdit.displayUnit);\r\n    setDensity(ingredientToEdit.density);\r\n    setRemarks(ingredientToEdit.remarks);\r\n    setTotalCost(ingredientToEdit.totalCost);\r\n    setCategory(ingredientToEdit.category);\r\n    setLocation(ingredientToEdit.location);\r\n    setIngredientId(ingredientToEdit._id);\r\n  }, [ingredientToEdit]);\r\n\r\n  useEffect(() => {\r\n    if (displayUnit === \"piece\") {\r\n      document.querySelector(\"#density\").disabled = true;\r\n    } else {\r\n      document.querySelector(\"#density\").disabled = false;\r\n    }\r\n  }, [displayUnit]);\r\n\r\n  return (\r\n    <div className=\"AddIngredient\">\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <ReactLoading\r\n            type={\"spokes\"}\r\n            color={\"rgb(72, 133, 184)\"}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n      <h2 className=\"title\">{ingredientIsEdit ? \"Edit\" : \"Add\"} Ingredient</h2>\r\n      <div className=\"form-container\">\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"quantity\">Quantity:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"quantity\"\r\n            value={quantity}\r\n            onChange={(e) => setQuantity(Number(e.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"unit\">Unit:</label>\r\n          <select\r\n            name=\"unit\"\r\n            id=\"unit\"\r\n            value={displayUnit}\r\n            onChange={(e) => setDisplayUnit(e.target.value)}\r\n          >\r\n            <optgroup label=\"Piece\">\r\n              <option value=\"piece\">piece</option>\r\n            </optgroup>\r\n            <optgroup label=\"Weight\">\r\n              {weightUnits.map((unit) => (\r\n                <option\r\n                  key={`addIngredient-weight-${unit.name}`}\r\n                  value={unit.name}\r\n                >\r\n                  {unit.name}\r\n                </option>\r\n              ))}\r\n            </optgroup>\r\n            <optgroup label=\"Volume\">\r\n              {volumeUnits.map((unit) => (\r\n                <option\r\n                  key={`addIngredient-volume-${unit.name}`}\r\n                  value={unit.name}\r\n                >\r\n                  {unit.name}\r\n                </option>\r\n              ))}\r\n            </optgroup>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"density\">Density:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"density\"\r\n            step=\"0.001\"\r\n            value={density}\r\n            onChange={(e) => setDensity(Number(e.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"total-cost\">Total Cost:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"total-cost\"\r\n            value={totalCost}\r\n            onChange={(e) => setTotalCost(Number(e.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"category\">Category:</label>\r\n          <input\r\n            type=\"text\"\r\n            list=\"categories\"\r\n            id=\"category\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          />\r\n          <datalist id=\"categories\">\r\n            {ingredientCategories.map((category) => (\r\n              <option\r\n                key={`ingredient-category-${category}`}\r\n                value={category}\r\n              />\r\n            ))}\r\n          </datalist>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"location\">Location:</label>\r\n          <input\r\n            type=\"text\"\r\n            list=\"locations\"\r\n            id=\"location\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n          />\r\n          <datalist id=\"locations\">\r\n            {ingredientLocations.map((location) => (\r\n              <option\r\n                key={`ingredient-location-${location}`}\r\n                value={location}\r\n              />\r\n            ))}\r\n          </datalist>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"remarks\">Remarks:</label>\r\n          <textarea\r\n            name=\"remarks\"\r\n            id=\"remarks\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            value={remarks}\r\n            onChange={(e) => setRemarks(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <p className=\"error-msg\">{errorMsg}</p>\r\n        <div className=\"form-row\">\r\n          <div></div>\r\n          <button className=\"btn btn-primary\" onClick={saveBtnHandler}>\r\n            submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  ingredients,\r\n  ingredientToEdit,\r\n  ingredientIsEdit,\r\n  weightUnits,\r\n  volumeUnits,\r\n}) => ({\r\n  ingredients,\r\n  ingredientToEdit,\r\n  ingredientIsEdit,\r\n  weightUnits,\r\n  volumeUnits,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddIngredient);\r\n","import \"./AddRecipe.css\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactLoading from \"react-loading\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddRecipe = ({\r\n  recipeToEdit,\r\n  recipeIsEdit,\r\n  weightUnits,\r\n  volumeUnits,\r\n}) => {\r\n  const restaurant = useSelector((state) => state.restaurant);\r\n  const recipesSelector = useSelector((state) => state.recipes);\r\n  const ingredientsSelector = useSelector((state) => state.ingredients);\r\n  const [name, setName] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [recipeId, setRecipeId] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [recipes, setRecipes] = useState(recipesSelector);\r\n  const [recipeIngredients, setRecipeIngredients] = useState([]);\r\n  // state for new ingredient\r\n  const [addedIngredient, setAddedIngredient] = useState();\r\n  const [ingredientQuantity, setIngredientQuantity] = useState(\"\");\r\n  const [ingredientDisplayUnit, setIngredientDisplayUnit] = useState(\"\");\r\n  // other states\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [ingredientErrorMsg, setIngredientErrorMsg] = useState(\"\");\r\n\r\n  let recipeCategories = recipes.map((recipe) => recipe.category);\r\n  recipeCategories = [...new Set(recipeCategories)];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const ingredientSelectChangeHandler = (_id) => {\r\n    setAddedIngredient(\r\n      ingredients.find((ingredient) => ingredient._id === _id)\r\n    );\r\n  };\r\n\r\n  const addIngredientHandler = () => {\r\n    setErrorMsg(\"\");\r\n    setIngredientErrorMsg(\"\");\r\n\r\n    // ingredient input validation\r\n    if (addedIngredient === undefined) {\r\n      setIngredientErrorMsg(\"Please select an ingredient\");\r\n    } else if (\r\n      recipeIngredients.some(\r\n        (ingredient) => ingredient.ingredient._id === addedIngredient._id\r\n      )\r\n    ) {\r\n      setIngredientErrorMsg(\"The ingredient already exists\");\r\n    } else if (ingredientQuantity < 0.001) {\r\n      setIngredientErrorMsg(\"Quantity must not be zero or a negative number\");\r\n    } else if (\r\n      ingredientQuantity % 1 !== 0 &&\r\n      ingredientDisplayUnit === \"piece\"\r\n    ) {\r\n      setIngredientErrorMsg(\r\n        \"Quantity must be a whole number when unit is PIECE\"\r\n      );\r\n    } else {\r\n      setRecipeIngredients([\r\n        ...recipeIngredients,\r\n        {\r\n          ingredient: addedIngredient,\r\n          quantity: Number(ingredientQuantity),\r\n          displayUnit: ingredientDisplayUnit.trim().toLowerCase(),\r\n        },\r\n      ]);\r\n\r\n      setIngredientErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const saveBtnHandler = () => {\r\n    setErrorMsg(\"\");\r\n    setIngredientErrorMsg(\"\");\r\n\r\n    // input validation\r\n    if (name.trim() === \"\") {\r\n      setErrorMsg(\"Name must not be empty\");\r\n    } else if (\r\n      recipes.some((recipe) => recipe.name === name.trim().toLowerCase()) &&\r\n      recipeIsEdit === false\r\n    ) {\r\n      setErrorMsg(\"The recipe already exists\");\r\n    } else if (recipeIngredients.length === 0) {\r\n      setErrorMsg(\"There should be at least one ingredient\");\r\n    } else {\r\n      setLoading(true);\r\n      // get recipeIngredients array and convert to ingredient ids only\r\n      let newRecipeIngredients = recipeIngredients.map((ingredient) => {\r\n        return { ...ingredient, ingredient: ingredient.ingredient._id };\r\n      });\r\n\r\n      if (recipeIsEdit === false) {\r\n        axios\r\n          .post(\"https://prigider-be.herokuapp.com/api/recipe\", {\r\n            name: name.trim().toLowerCase(),\r\n            details,\r\n            category: category.trim().toLowerCase(),\r\n            recipeIngredients: newRecipeIngredients,\r\n          })\r\n          .then(async (res) => {\r\n            let recipeIds = await recipes.map((recipe) => recipe._id);\r\n            axios\r\n              .put(\r\n                `https://prigider-be.herokuapp.com/api/restaurant/${restaurant._id}`,\r\n                {\r\n                  recipes: [...recipeIds, res.data._id],\r\n                }\r\n              )\r\n              .then((res) => {\r\n                dispatch({\r\n                  type: \"UPDATE_RESTAURANT\",\r\n                  payload: { ...res.data },\r\n                });\r\n                dispatch({\r\n                  type: \"UPDATE_RECIPES\",\r\n                  payload: [...res.data.recipes],\r\n                });\r\n\r\n                localStorage.setItem(\"restaurant\", JSON.stringify(res.data));\r\n                localStorage.setItem(\r\n                  \"recipes\",\r\n                  JSON.stringify(res.data.recipes)\r\n                );\r\n\r\n                setLoading(false);\r\n                alert(\r\n                  `Recipe ${name\r\n                    .trim()\r\n                    .toUpperCase()} has been added to the recipe list`\r\n                );\r\n              });\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            alert(\"communication error\");\r\n          });\r\n      } else {\r\n        axios\r\n          .put(`https://prigider-be.herokuapp.com/api/recipe/${recipeId}`, {\r\n            name: name.trim().toLowerCase(),\r\n            details,\r\n            category: category.trim().toLowerCase(),\r\n            recipeIngredients: newRecipeIngredients,\r\n          })\r\n          .then((res) => {\r\n            dispatch({ type: \"CONFIRM_EDIT_RECIPE\", payload: res.data });\r\n            let oldRecipes = JSON.parse(localStorage.getItem(\"recipes\"));\r\n            oldRecipes = oldRecipes.map((recipe) =>\r\n              recipe._id === res.data._id ? res.data : recipe\r\n            );\r\n            localStorage.setItem(\"recipes\", JSON.stringify(oldRecipes));\r\n\r\n            setLoading(false);\r\n            alert(\r\n              `Recipe ${name\r\n                .trim()\r\n                .toUpperCase()} has been added to the recipe list`\r\n            );\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            alert(\"communication error\");\r\n          });\r\n      }\r\n\r\n      // clear all input when addition of new ingredient is successful\r\n      setName(\"\");\r\n      setDetails(\"\");\r\n      setCategory(\"\");\r\n      setRecipeIngredients([]);\r\n      setAddedIngredient();\r\n      setIngredientQuantity(\"\");\r\n      setIngredientDisplayUnit(\"\");\r\n      setErrorMsg(\"\");\r\n      setIngredientErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setName(recipeToEdit.name);\r\n    setDetails(recipeToEdit.details);\r\n    setCategory(recipeToEdit.category);\r\n    setRecipeIngredients(recipeToEdit.recipeIngredients);\r\n    setRecipeId(recipeToEdit._id);\r\n  }, [recipeToEdit, recipeIsEdit]);\r\n\r\n  // useEffect for when an ingredient with a \"piece\" unit is selected\r\n  useEffect(() => {\r\n    // get all ingredients with \"piece as displayUnit\"\r\n    let ingredientsWithPiece = ingredients.filter(\r\n      (ingredient) => ingredient.displayUnit === \"piece\"\r\n    );\r\n    // if ingredient to be added is found inside the array of ingredients with \"piece\" as displayUnit, change value of selector for unit to piece and disable it. Else, enable the selector for unit.\r\n    if (addedIngredient) {\r\n      if (\r\n        ingredientsWithPiece.some(\r\n          (ingredient) => ingredient._id === addedIngredient._id\r\n        )\r\n      ) {\r\n        setIngredientDisplayUnit(\"piece\");\r\n        document.querySelector(\"#ingredient-unit\").disabled = true;\r\n      } else {\r\n        setIngredientDisplayUnit(\"gram\");\r\n        document.querySelector(\"#ingredient-unit\").disabled = false;\r\n      }\r\n    }\r\n  }, [addedIngredient, ingredients]);\r\n\r\n  useEffect(() => {\r\n    if (recipesSelector) {\r\n      setRecipes(recipesSelector);\r\n    }\r\n  }, [recipesSelector]);\r\n\r\n  useEffect(() => {\r\n    if (ingredientsSelector) {\r\n      setIngredients(ingredientsSelector);\r\n    }\r\n  }, [ingredientsSelector]);\r\n\r\n  return (\r\n    <div className=\"AddRecipe\">\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <ReactLoading\r\n            type={\"spokes\"}\r\n            color={\"rgb(72, 133, 184)\"}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n      <h2 className=\"title\">{recipeIsEdit ? \"Edit\" : \"Add\"} Recipe</h2>\r\n      <div className=\"form-container\">\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            className=\"input-padding\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"category\">Category:</label>\r\n          <input\r\n            className=\"input-padding\"\r\n            type=\"text\"\r\n            list=\"recipe-categories\"\r\n            id=\"category\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          />\r\n          <datalist id=\"recipe-categories\">\r\n            {recipeCategories.map((category) => (\r\n              <option key={`recipe-category-${category}`} value={category} />\r\n            ))}\r\n          </datalist>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"details\">Details:</label>\r\n          <textarea\r\n            className=\"input-padding\"\r\n            name=\"details\"\r\n            id=\"details\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        {/* added ingredients display */}\r\n        <div className=\"ingredient-display-container\">\r\n          <div className=\"ingredients-title\">Ingredients:</div>\r\n          {recipeIngredients.length === 0 && (\r\n            <div className=\"no-ingredients\">No ingredients added yet</div>\r\n          )}\r\n          {recipeIngredients.map((ingredient) => (\r\n            <p\r\n              key={`${ingredient.ingredient.name}-to-add-ingredient`}\r\n              className=\"ingredient-added\"\r\n            >\r\n              <span>{ingredient.ingredient.name}</span>\r\n              <span>\r\n                - {ingredient.quantity} {ingredient.displayUnit}\r\n                {ingredient.quantity > 1 && \"s\"}\r\n              </span>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={(e) => {\r\n                  // put all elements with class \"list-of-ingredients\" into an array, target the parent element of this button and find its index from the created array, and use that index to remove an ingredient from the recipeIngredients state\r\n                  let ingredientsArray = [\r\n                    ...document.querySelectorAll(\".ingredient-added\"),\r\n                  ];\r\n                  let ingredientIndex = ingredientsArray.findIndex(\r\n                    (ingredient) => ingredient === e.target.parentElement\r\n                  );\r\n                  setRecipeIngredients(\r\n                    recipeIngredients.filter(\r\n                      (ingredient, i) => i !== ingredientIndex\r\n                    )\r\n                  );\r\n                }}\r\n              >\r\n                x\r\n              </button>\r\n            </p>\r\n          ))}\r\n        </div>\r\n        {/* add ingredients input */}\r\n        <div className=\"ingredients-input\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"ingredient-name\">Ingredient Name:</label>\r\n            <select\r\n              name=\"ingredient-name\"\r\n              id=\"ingredient-name\"\r\n              onChange={(e) => ingredientSelectChangeHandler(e.target.value)}\r\n            >\r\n              <option value=\"\" hidden>\r\n                select ingredient\r\n              </option>\r\n              {ingredients.map((ingredient) => (\r\n                <option\r\n                  key={`ingredient-option-${ingredient._id}`}\r\n                  value={ingredient._id}\r\n                >\r\n                  {ingredient.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"ingredient-quantity\">Quantity:</label>\r\n            <div>\r\n              <input\r\n                type=\"number\"\r\n                id=\"ingredient-quantity\"\r\n                value={ingredientQuantity}\r\n                onChange={(e) => setIngredientQuantity(e.target.value)}\r\n              />\r\n              <select\r\n                name=\"ingredient-unit\"\r\n                id=\"ingredient-unit\"\r\n                value={ingredientDisplayUnit}\r\n                onChange={(e) => setIngredientDisplayUnit(e.target.value)}\r\n              >\r\n                <option value=\"piece\" hidden>\r\n                  piece\r\n                </option>\r\n                <optgroup label=\"Weight\">\r\n                  {weightUnits.map((unit) => (\r\n                    <option\r\n                      key={`addRecipe-weight-${unit.name}`}\r\n                      value={unit.name}\r\n                    >\r\n                      {unit.name}\r\n                    </option>\r\n                  ))}\r\n                </optgroup>\r\n                <optgroup label=\"Volume\">\r\n                  {volumeUnits.map((unit) => (\r\n                    <option\r\n                      key={`addRecipe-volume-${unit.name}`}\r\n                      value={unit.name}\r\n                    >\r\n                      {unit.name}\r\n                    </option>\r\n                  ))}\r\n                </optgroup>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p\r\n            className=\"error-msg\"\r\n            style={ingredientErrorMsg === \"\" ? { display: \"none\" } : null}\r\n          >\r\n            {ingredientErrorMsg}\r\n          </p>\r\n          <button className={\"btn btn-success\"} onClick={addIngredientHandler}>\r\n            add ingredient\r\n          </button>\r\n        </div>\r\n        <p className=\"error-msg\">{errorMsg}</p>\r\n        <div className=\"form-row\">\r\n          <div></div>\r\n          <button\r\n            className=\"btn btn-primary submit-button\"\r\n            onClick={saveBtnHandler}\r\n          >\r\n            submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  recipeToEdit,\r\n  recipeIsEdit,\r\n  weightUnits,\r\n  volumeUnits,\r\n}) => ({\r\n  recipeToEdit,\r\n  recipeIsEdit,\r\n  weightUnits,\r\n  volumeUnits,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddRecipe);\r\n","import \"./LoginPage.css\";\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const loginHandler = () => {\r\n    setLoginError(\"\");\r\n    if (username.trim() === \"\") {\r\n      usernameRef.current.focus();\r\n      return setLoginError(\"Enter an email address\");\r\n    }\r\n    if (password.trim() === \"\") {\r\n      passwordRef.current.focus();\r\n      return setLoginError(\"Enter a password\");\r\n    }\r\n    setLoading(true);\r\n    // get restaurant's information\r\n    axios(`https://prigider-be.herokuapp.com/api/restaurant/${username}`)\r\n      .then((res) => {\r\n        // validate login attempt\r\n        if (res.data[0] === undefined) {\r\n          setLoading(false);\r\n          usernameRef.current.focus();\r\n          return setLoginError(\"Username is not registered\");\r\n        } else if (res.data[0].password !== password) {\r\n          setLoading(false);\r\n          passwordRef.current.focus();\r\n          return setLoginError(\"Password does not match with the username\");\r\n        } else {\r\n          // update redux and localstorage\r\n          dispatch({ type: \"UPDATE_RESTAURANT\", payload: res.data[0] });\r\n          dispatch({\r\n            type: \"UPDATE_INGREDIENTS\",\r\n            payload: res.data[0].ingredients,\r\n          });\r\n          dispatch({ type: \"UPDATE_RECIPES\", payload: res.data[0].recipes });\r\n          localStorage.setItem(\"restaurant\", JSON.stringify(res.data[0]));\r\n          localStorage.setItem(\r\n            \"ingredients\",\r\n            JSON.stringify(res.data[0].ingredients)\r\n          );\r\n          localStorage.setItem(\"recipes\", JSON.stringify(res.data[0].recipes));\r\n          setLoading(false);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const showHidePasswordClickHandler = () => {\r\n    passwordRef.current.type === \"password\"\r\n      ? (passwordRef.current.type = \"text\")\r\n      : (passwordRef.current.type = \"password\");\r\n    if (showPassword) {\r\n      setShowPassword(false);\r\n    } else {\r\n      setShowPassword(true);\r\n    }\r\n  };\r\n\r\n  const registerButtonClickHandler = () => {\r\n    dispatch({ type: \"EDIT_ACCOUNT\", payload: false });\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"LoginPage\">\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <ReactLoading\r\n            type={\"spokes\"}\r\n            color={\"rgb(72, 133, 184)\"}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n      <Header />\r\n      <div className=\"login-page-container\">\r\n        <div className=\"login-box\">\r\n          <p className=\"login-title\">Sign in to your account</p>\r\n          <div className=\"login-error\">\r\n            <small>{loginError}</small>\r\n          </div>\r\n          <input\r\n            type=\"username\"\r\n            name=\"username-login\"\r\n            id=\"username-login\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n            }}\r\n            ref={usernameRef}\r\n            onKeyDown={(e) =>\r\n              e.key === \"Enter\" ? passwordRef.current.focus() : null\r\n            }\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password-login\"\r\n            id=\"password-login\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n            ref={passwordRef}\r\n            onKeyDown={(e) => (e.key === \"Enter\" ? loginHandler() : null)}\r\n          />\r\n          <div\r\n            className=\"show-hide-password\"\r\n            onClick={showHidePasswordClickHandler}\r\n          >\r\n            {showPassword ? \"Hide\" : \"Show\"} password\r\n          </div>\r\n          <button className=\"login-button\" onClick={loginHandler}>\r\n            Log In\r\n          </button>\r\n        </div>\r\n        <p className=\"register-message\">\r\n          Don't have an account?&nbsp;\r\n          <span className=\"link-hover\" onClick={registerButtonClickHandler}>\r\n            Register here\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import \"./RegistrationPage.css\";\r\nimport Filter from \"../../components/Header/Header\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst RegistrationPage = () => {\r\n  const restaurant = useSelector((state) => state.restaurant);\r\n  const editAccount = useSelector((state) => state.editAccount);\r\n  const [branch, setBranch] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [restaurantName, setRestaurantName] = useState(\"\");\r\n  const [registrationError, setRegistrationError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  let registerButtonClickHandler = () => {\r\n    setLoading(true);\r\n    setRegistrationError(\"\");\r\n\r\n    if (\r\n      username.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      restaurantName.trim() === \"\"\r\n    ) {\r\n      setLoading(false);\r\n      return setRegistrationError(\"Do not leave any items blank\");\r\n    } else if (password.length < 4) {\r\n      setLoading(false);\r\n      return setRegistrationError(\"Password should have at least 4 characters\");\r\n    }\r\n\r\n    if (editAccount === false) {\r\n      let registerBody = {\r\n        username: username.trim(),\r\n        password,\r\n        restaurantName: restaurantName.trim().toLowerCase(),\r\n        branch: branch.trim().toLowerCase(),\r\n      };\r\n\r\n      // check if username is available\r\n      axios\r\n        .post(\"https://prigider-be.herokuapp.com/api/restaurant\", registerBody)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          if (res.data.error) {\r\n            setRegistrationError(res.data.error);\r\n          } else {\r\n            alert(\r\n              `Account ${username.trim()} has been registered successfully!`\r\n            );\r\n            history.push(\"/login\");\r\n          }\r\n        });\r\n    } else {\r\n      axios\r\n        .put(\r\n          `https://prigider-be.herokuapp.com/api/restaurant/${restaurant._id}`,\r\n          {\r\n            password,\r\n            restaurantName: restaurantName.trim().toLowerCase(),\r\n            branch: branch.trim().toLowerCase(),\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({ type: \"UPDATE_RESTAURANT\", payload: res.data });\r\n          localStorage.setItem(\"restaurant\", JSON.stringify(res.data));\r\n          setLoading(false);\r\n          alert(`Account ${username} has been edited successfully!`);\r\n          history.push(\"/\");\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editAccount) {\r\n      setUsername(restaurant.username);\r\n      setPassword(restaurant.password);\r\n      setRestaurantName(restaurant.restaurantName);\r\n      setBranch(restaurant.branch);\r\n    }\r\n  }, [restaurant, editAccount]);\r\n\r\n  return (\r\n    <div className=\"RegistrationPage\">\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <ReactLoading\r\n            type={\"spokes\"}\r\n            color={\"rgb(72, 133, 184)\"}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n      <Filter />\r\n      <div className=\"registration-page-container\">\r\n        <div className=\"form-container\">\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"reg-username\">username</label>\r\n            <input\r\n              type=\"username\"\r\n              id=\"reg-username\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n              value={username}\r\n              disabled={editAccount}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"reg-password\">password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"reg-password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"reg-restaurant-name\">restaurant name</label>\r\n            <input\r\n              type=\"restaurant-name\"\r\n              id=\"reg-restaurant-name\"\r\n              onChange={(e) => {\r\n                setRestaurantName(e.target.value);\r\n              }}\r\n              value={restaurantName}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"reg-branch\">branch (optional)</label>\r\n            <input\r\n              type=\"branch\"\r\n              id=\"reg-branch\"\r\n              onChange={(e) => {\r\n                setBranch(e.target.value);\r\n              }}\r\n              value={branch}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div></div>\r\n            <button\r\n              onClick={() => {\r\n                registerButtonClickHandler();\r\n              }}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"registration-error\">{registrationError}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport InventoryList from \"./components/InventoryList/InventoryList\";\r\nimport RecipesList from \"./components/RecipesList/RecipesList\";\r\nimport Basket from \"./components/Basket/Basket\";\r\nimport AddIngredient from \"./components/AddIngredient/AddIngredient\";\r\nimport AddRecipe from \"./components/AddRecipe/AddRecipe\";\r\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\r\nimport RegistrationPage from \"./pages/RegistrationPage/RegistrationPage\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  if (localStorage.getItem(\"restaurant\")) {\r\n    dispatch({\r\n      type: \"UPDATE_RESTAURANT\",\r\n      payload: JSON.parse(localStorage.getItem(\"restaurant\")),\r\n    });\r\n  }\r\n  if (localStorage.getItem(\"ingredients\")) {\r\n    dispatch({\r\n      type: \"UPDATE_INGREDIENTS\",\r\n      payload: JSON.parse(localStorage.getItem(\"ingredients\")),\r\n    });\r\n  }\r\n  if (localStorage.getItem(\"recipes\")) {\r\n    dispatch({\r\n      type: \"UPDATE_RECIPES\",\r\n      payload: JSON.parse(localStorage.getItem(\"recipes\")),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"restaurant\") === null) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegistrationPage} />\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={InventoryList} />\r\n            <Route path=\"/inventory\" component={InventoryList} />\r\n            <Route path=\"/recipes\" component={RecipesList} />\r\n            <Route path=\"/basket\" component={Basket} />\r\n            <Route path=\"/add-ingredient\" component={AddIngredient} />\r\n            <Route path=\"/add-recipe\" component={AddRecipe} />\r\n          </Switch>\r\n        </Layout>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// weight is in grams per milliliter\r\nconst initState = {\r\n  editAccount: false,\r\n  restaurant: {},\r\n  ingredients: [],\r\n  recipes: [],\r\n  ingredientToEdit: {\r\n    _id: \"\",\r\n    name: \"\",\r\n    quantity: 0,\r\n    displayUnit: \"gram\",\r\n    density: 1,\r\n    remarks: \"\",\r\n    totalCost: 0,\r\n    category: \"\",\r\n    location: \"\",\r\n  },\r\n  ingredientIsEdit: false,\r\n  recipeToEdit: {\r\n    _id: \"\",\r\n    name: \"\",\r\n    details: \"\",\r\n    recipeIngredients: [],\r\n    category: \"\",\r\n    imageUrl: \"\",\r\n  },\r\n  recipeIsEdit: false,\r\n  weightUnits: [\r\n    { name: \"gram\", conversion: 1 },\r\n    { name: \"kilogram\", conversion: 1000 },\r\n    { name: \"milligram\", conversion: 1 / 1000 },\r\n    { name: \"ounce\", conversion: 28.35 },\r\n    { name: \"pound\", conversion: 453.59 },\r\n  ],\r\n  volumeUnits: [\r\n    { name: \"milliliter\", conversion: 1 },\r\n    { name: \"liter\", conversion: 1000 },\r\n    { name: \"fluid ounce\", conversion: 29.57 },\r\n    { name: \"pint\", conversion: 473.18 },\r\n    { name: \"quart\", conversion: 946.35 },\r\n    { name: \"gallon\", conversion: 3785.41 },\r\n    { name: \"teaspoon\", conversion: 4.93 },\r\n    { name: \"tablespoon\", conversion: 14.79 },\r\n    { name: \"cup\", conversion: 236.59 },\r\n  ],\r\n  basket: [],\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  let newIngredientsArray;\r\n  let newRecipesArray;\r\n  let newBasket;\r\n  let newBasketItem;\r\n  let recipeIngredients;\r\n  let newIngredients;\r\n\r\n  switch (action.type) {\r\n    case \"EDIT_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        editAccount: action.payload,\r\n      };\r\n\r\n    case \"UPDATE_RESTAURANT\":\r\n      return {\r\n        ...state,\r\n        restaurant: { ...action.payload },\r\n      };\r\n\r\n    case \"UPDATE_INGREDIENTS\":\r\n      return {\r\n        ...state,\r\n        ingredients: [...action.payload],\r\n      };\r\n\r\n    case \"UPDATE_RECIPES\":\r\n      return {\r\n        ...state,\r\n        recipes: [...action.payload],\r\n      };\r\n\r\n    case \"EDIT_INGREDIENT\":\r\n      return {\r\n        ...state,\r\n        ingredientToEdit: { ...action.payload },\r\n        ingredientIsEdit: true,\r\n      };\r\n\r\n    case \"CLEAR_INGREDIENT_EDIT\":\r\n      return {\r\n        ...state,\r\n        ingredientIsEdit: false,\r\n        ingredientToEdit: {\r\n          _id: \"\",\r\n          name: \"\",\r\n          quantity: 0,\r\n          displayUnit: \"gram\",\r\n          density: 1,\r\n          remarks: \"\",\r\n          totalCost: 0,\r\n          category: \"\",\r\n          location: \"\",\r\n        },\r\n      };\r\n\r\n    case \"CONFIRM_EDIT_INGREDIENT\":\r\n      newIngredientsArray = state.ingredients.map((ingredient) =>\r\n        ingredient._id === action.payload._id ? action.payload : ingredient\r\n      );\r\n      return {\r\n        ...state,\r\n        ingredients: [...newIngredientsArray],\r\n        ingredientIsEdit: false,\r\n        ingredientToEdit: {\r\n          _id: \"\",\r\n          name: \"\",\r\n          quantity: 0,\r\n          displayUnit: \"gram\",\r\n          density: 1,\r\n          remarks: \"\",\r\n          totalCost: 0,\r\n          category: \"\",\r\n          location: \"\",\r\n        },\r\n      };\r\n\r\n    case \"EDIT_RECIPE\":\r\n      return {\r\n        ...state,\r\n        recipeToEdit: { ...action.payload },\r\n        recipeIsEdit: true,\r\n      };\r\n\r\n    case \"CLEAR_RECIPE_EDIT\":\r\n      return {\r\n        ...state,\r\n        recipeIsEdit: false,\r\n        recipeToEdit: {\r\n          _id: \"\",\r\n          name: \"\",\r\n          details: \"\",\r\n          recipeIngredients: [],\r\n          category: \"\",\r\n          imageUrl: \"\",\r\n        },\r\n      };\r\n\r\n    case \"CONFIRM_EDIT_RECIPE\":\r\n      newRecipesArray = state.recipes.map((recipe) =>\r\n        recipe._id === action.payload._id ? action.payload : recipe\r\n      );\r\n      return {\r\n        ...state,\r\n        recipes: [...newRecipesArray],\r\n        recipeIsEdit: false,\r\n        recipeToEdit: {\r\n          _id: \"\",\r\n          name: \"\",\r\n          details: \"\",\r\n          recipeIngredients: [],\r\n          category: \"\",\r\n          imageUrl: \"\",\r\n        },\r\n      };\r\n\r\n    case \"INCREASE_INVENTORY\":\r\n      return {\r\n        ...state,\r\n        ingredients: [\r\n          ...state.ingredients.map((ingredient) =>\r\n            ingredient._id === action.payload._id\r\n              ? {\r\n                  ...ingredient,\r\n                  quantity: ingredient.quantity + action.payload.quantity,\r\n                  totalCost: ingredient.totalCost + action.payload.totalCost,\r\n                }\r\n              : ingredient\r\n          ),\r\n        ],\r\n      };\r\n\r\n    case \"REDUCE_INVENTORY\":\r\n      let ingredientToReduce = state.ingredients.find(\r\n        (ingredient) => ingredient._id === action.payload._id\r\n      );\r\n      let newQuantity = ingredientToReduce.quantity - action.payload.quantity;\r\n      let newTotalCost =\r\n        ingredientToReduce.totalCost -\r\n        (action.payload.quantity * ingredientToReduce.totalCost) /\r\n          ingredientToReduce.quantity;\r\n\r\n      if (newQuantity < 0) {\r\n        newQuantity = 0;\r\n      }\r\n      if (newTotalCost < 0) {\r\n        newTotalCost = 0;\r\n      }\r\n      return {\r\n        ...state,\r\n        ingredients: [\r\n          ...state.ingredients.map((ingredient) =>\r\n            ingredient.name === action.payload.ingredientName\r\n              ? {\r\n                  ...ingredient,\r\n                  quantity: newQuantity,\r\n                  totalCost: newTotalCost,\r\n                }\r\n              : ingredient\r\n          ),\r\n        ],\r\n      };\r\n\r\n    case \"ADD_TO_BASKET\":\r\n      // for changing ingredients state\r\n      recipeIngredients = action.payload.recipeIngredients;\r\n      newIngredients = [...state.ingredients];\r\n\r\n      recipeIngredients.forEach((recipeIngredient) => {\r\n        newIngredients.map((newIngredient) =>\r\n          recipeIngredient.ingredient._id === newIngredient._id\r\n            ? (newIngredient.quantity -= recipeIngredient.quantity)\r\n            : newIngredient\r\n        );\r\n      });\r\n\r\n      // for changing basket state\r\n      newBasket = [];\r\n      if (\r\n        state.basket.find((item) => item._id === action.payload._id) ===\r\n        undefined\r\n      ) {\r\n        newBasket = [...state.basket, { ...action.payload, itemQuantity: 1 }];\r\n      } else {\r\n        newBasket = state.basket.map((item) =>\r\n          item._id === action.payload._id\r\n            ? { ...item, itemQuantity: item.itemQuantity + 1 }\r\n            : item\r\n        );\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        ingredients: newIngredients,\r\n        basket: newBasket,\r\n      };\r\n\r\n    case \"SUBTRACT_TO_BASKET\":\r\n      recipeIngredients = action.payload.recipeIngredients;\r\n      newIngredients = [...state.ingredients];\r\n      newBasket = [...state.basket];\r\n\r\n      newBasketItem = state.basket.find(\r\n        (item) => item._id === action.payload._id\r\n      );\r\n\r\n      if (newBasketItem === undefined) {\r\n        return { ...state };\r\n      } else {\r\n        // for changing ingredients state\r\n        recipeIngredients.forEach((recipeIngredient) => {\r\n          newIngredients.map((newIngredient) =>\r\n            recipeIngredient.ingredient._id === newIngredient._id\r\n              ? (newIngredient.quantity += recipeIngredient.quantity)\r\n              : newIngredient\r\n          );\r\n        });\r\n\r\n        // for changing basket state\r\n        if (newBasketItem.itemQuantity <= 1) {\r\n          newBasket = newBasket.filter(\r\n            (item) => item._id !== action.payload._id\r\n          );\r\n        } else {\r\n          newBasket = state.basket.map((item) =>\r\n            item._id === action.payload._id\r\n              ? { ...item, itemQuantity: item.itemQuantity - 1 }\r\n              : item\r\n          );\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        ingredients: newIngredients,\r\n        basket: newBasket,\r\n      };\r\n\r\n    case \"DELETE_FROM_BASKET\":\r\n      // for updating ingredients state\r\n      recipeIngredients = action.payload.recipeIngredients;\r\n      newIngredients = [...state.ingredients];\r\n\r\n      recipeIngredients.forEach((recipeIngredient) => {\r\n        newIngredients.map((newIngredient) =>\r\n          recipeIngredient.ingredient._id === newIngredient._id\r\n            ? (newIngredient.quantity +=\r\n                recipeIngredient.quantity * action.payload.itemQuantity)\r\n            : newIngredient\r\n        );\r\n      });\r\n\r\n      // update quantity of ingredients inventory\r\n      return {\r\n        ...state,\r\n        ingredients: newIngredients,\r\n        basket: [\r\n          ...state.basket.filter((item) => item._id !== action.payload._id),\r\n        ],\r\n      };\r\n\r\n    case \"EMPTY_BASKET\":\r\n      if (action.payload === \"confirm\") {\r\n        return {\r\n          ...state,\r\n          basket: [],\r\n        };\r\n      } else {\r\n        // iterate through basket array and update ingredients inventory in each iteration\r\n        state.basket.forEach((basketItem) => {\r\n          recipeIngredients = basketItem.recipeIngredients;\r\n          newIngredients = [...state.ingredients];\r\n\r\n          recipeIngredients.forEach((recipeIngredient) => {\r\n            newIngredients.map((newIngredient) =>\r\n              recipeIngredient.ingredient._id === newIngredient._id\r\n                ? (newIngredient.quantity +=\r\n                    recipeIngredient.quantity * basketItem.itemQuantity)\r\n                : newIngredient\r\n            );\r\n          });\r\n        });\r\n\r\n        return {\r\n          ...state,\r\n          ingredients: newIngredients,\r\n          basket: [],\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}